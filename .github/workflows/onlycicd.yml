name: CI/CD Docker Multi-Service

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Job 1: 先測試後端功能（通過才能進入 build 階段）
jobs:
  test-backend:
    runs-on: ubuntu-latest

    # 啟動一個臨時 Postgres 資料庫服務
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: talen168168
          POSTGRES_DB: Ecommerce
        ports:
          - 5432:5432
        # 健康檢查，確保 DB Ready 才跑 pytest
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    # 設定後端測試時需要用到的環境變數
    env:
      SQLALCHEMY_DATABASE_URI: postgresql://postgres:talen168168@localhost:5432/Ecommerce
      JWT_SECRET_KEY: test_secret

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install backend dependencies
        run: |
          cd backend
          pip install --no-cache-dir -r requirements.txt
          pip install pytest

      - name: Run backend pytest
        run: |
          cd backend
          pytest

# Job 2: build & push backend / frontend，只在測試通過後才執行
  build-and-push:
    runs-on: ubuntu-latest
    needs: test-backend  # 必須等 test-backend job 成功

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push backend image
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-backend:latest

      # Build and push frontend image
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-frontend:latest

